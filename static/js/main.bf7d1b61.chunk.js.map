{"version":3,"sources":["Portal.js","index.js"],"names":["Portal","this","renderPortal","props","ReactDOM","unmountComponentAtNode","defaultNode","node","document","body","removeChild","createElement","appendChild","children","type","React","cloneElement","render","Component","ColoredRect","useState","color","position","setPosition","width","height","x","y","fill","shadowBlur","draggable","onDragMove","currentTarget","attrs","console","log","evt","screenX","screenY","style","top","left","placeholder","window","innerWidth","innerHeight","getElementById"],"mappings":"kPAGqBA,E,4LAEjBC,KAAKC,iB,yCAGYC,GACjBF,KAAKC,iB,6CAILE,IAASC,uBAAuBJ,KAAKK,aAAeL,KAAKE,MAAMI,MAC3DN,KAAKK,aACPE,SAASC,KAAKC,YAAYT,KAAKK,aAEjCL,KAAKK,YAAc,O,mCAGRH,GACNF,KAAKE,MAAMI,MAASN,KAAKK,cAC5BL,KAAKK,YAAcE,SAASG,cAAc,OAC1CH,SAASC,KAAKG,YAAYX,KAAKK,cAGjC,IAAIO,EAAWZ,KAAKE,MAAMU,SAEG,oBAAlBA,EAASC,OAClBD,EAAWE,IAAMC,aAAaH,IAGhCT,IAASa,OAAOJ,EAAUZ,KAAKE,MAAMI,MAAQN,KAAKK,e,+BAIlD,OAAO,S,GAjCyBS,IAAMG,W,QCG1C,SAASC,EAAYhB,GAAQ,IAAD,EACRiB,mBAAS,SAAlBC,EADiB,sBAEQD,mBAAS,CAAC,GAAI,KAFtB,mBAEjBE,EAFiB,KAEPC,EAFO,KAOxB,OACI,kBAAC,QAAD,CAAOC,MAAS,IAAKC,OAAU,KAC3B,kBAAC,OAAD,CACIC,EAAK,GACLC,EAAK,GACLH,MAAO,IACPC,OAAQ,IACRG,KAAMP,EACNQ,WAAY,EACZC,WAAS,EACTC,WAdK,SAAC5B,GACdoB,EAAY,CAACpB,EAAM6B,cAAcC,MAAMN,EAAExB,EAAM6B,cAAcC,MAAMP,IACnEQ,QAAQC,IAAI,CAAChC,EAAMiC,IAAIC,QAAQlC,EAAMiC,IAAIE,aAerC,kBAAC,EAAD,KACI,6BACI,2BAAOC,MAAO,CACVjB,SAAU,WACVkB,IAAKlB,EAAS,GAAG,GACjBmB,KAAMnB,EAAS,GAAG,EAClBE,MAAO,SAEPV,KAAK,OAAO4B,YAAY,iBAoBhDzB,iBAAO,kBAXP,SAAed,GACX,OACI,kBAAC,QAAD,CAAOqB,MAAOmB,OAAOC,WAAYnB,OAAQkB,OAAOE,aAC5C,kBAAC,QAAD,KACI,kBAAC1B,EAAD,SAOT,MAAWX,SAASsC,eAAe,W","file":"static/js/main.bf7d1b61.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport default class Portal extends React.Component {\n  componentDidMount() {\n    this.renderPortal();\n  }\n\n  componentDidUpdate(props) {\n    this.renderPortal();\n  }\n\n  componentWillUnmount() {\n    ReactDOM.unmountComponentAtNode(this.defaultNode || this.props.node);\n    if (this.defaultNode) {\n      document.body.removeChild(this.defaultNode);\n    }\n    this.defaultNode = null;\n  }\n\n  renderPortal(props) {\n    if (!this.props.node && !this.defaultNode) {\n      this.defaultNode = document.createElement('div');\n      document.body.appendChild(this.defaultNode);\n    }\n\n    let children = this.props.children;\n    // https://gist.github.com/jimfb/d99e0678e9da715ccf6454961ef04d1b\n    if (typeof children.type === 'function') {\n      children = React.cloneElement(children);\n    }\n\n    ReactDOM.render(children, this.props.node || this.defaultNode);\n  }\n\n  render() {\n    return null;\n  }\n}\n","import React, { useState } from 'react';\r\nimport { render } from 'react-dom';\r\nimport Portal from './Portal';\r\nimport { Stage, Layer, Rect, Group } from 'react-konva';\r\n// import Konva from 'konva';\r\n\r\nfunction ColoredRect(props) {\r\n    const [color] = useState('green');\r\n    const [position, setPosition] = useState([50, 50])\r\n    let handleDrag = (props) => {\r\n        setPosition([props.currentTarget.attrs.y,props.currentTarget.attrs.x]);\r\n        console.log([props.evt.screenX,props.evt.screenY]);\r\n    }\r\n    return (\r\n        <Group width = {100} height = {100}>\r\n            <Rect\r\n                x = {50}\r\n                y = {50}\r\n                width={100}\r\n                height={100}\r\n                fill={color}\r\n                shadowBlur={5}\r\n                draggable\r\n                onDragMove = {handleDrag}\r\n            />\r\n            \r\n            <Portal>\r\n                <div>\r\n                    <input style={{\r\n                        position: 'absolute',\r\n                        top: position[0]+50,\r\n                        left: position[1]+6,\r\n                        width: '100px'\r\n                    }}\r\n                        type='text' placeholder='some text'></input>\r\n                </div>\r\n            </Portal>\r\n        </Group>\r\n\r\n    );\r\n\r\n}\r\n\r\nfunction Shape(props) {\r\n    return (\r\n        <Stage width={window.innerWidth} height={window.innerHeight}>\r\n            <Layer>\r\n                <ColoredRect />\r\n\r\n            </Layer>\r\n        </Stage>\r\n    );\r\n}\r\n\r\nrender(<Shape />, document.getElementById('root'));"],"sourceRoot":""}